{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anuragkalra/safekeep-workspace/v2-workspace/quimby/frontend/src/ChartsTester.js\";\nimport React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nclass ChartsTester extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/testAPI').then(res => res.json()).then(users => this.setState({\n      users\n    }));\n  }\n\n  render() {\n    let data = []; //Need some better way to generate colors programmatically\n\n    this.state.users.forEach(e => data.push({\n      name: e.name,\n      value: e.hours,\n      color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n    }));\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        style: {\n          height: \"200px\"\n        },\n        label: ({\n          dataEntry\n        }) => dataEntry.name,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default ChartsTester;","map":{"version":3,"sources":["/Users/anuragkalra/safekeep-workspace/v2-workspace/quimby/frontend/src/ChartsTester.js"],"names":["React","PieChart","ChartsTester","Component","constructor","props","state","users","componentDidMount","fetch","then","res","json","setState","render","data","forEach","e","push","name","value","hours","color","Math","floor","random","toString","console","log","height","dataEntry"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQH,KAAK,IAAI,KAAKM,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd,CAFjB;AAGH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,EAAX,CADK,CAEL;;AACA,SAAKT,KAAL,CAAWC,KAAX,CAAiBS,OAAjB,CAAyBC,CAAC,IAAIF,IAAI,CAACG,IAAL,CAC5B;AACEC,MAAAA,IAAI,EAAEF,CAAC,CAACE,IADV;AAEEC,MAAAA,KAAK,EAAEH,CAAC,CAACI,KAFX;AAGEC,MAAAA,KAAK,EAAE,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C;AAHb,KAD4B,CAA9B;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAACc,UAAAA,MAAM,EAAC;AAAR,SAAjB;AACE,QAAA,KAAK,EACH,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAmBA,SAAS,CAACX,IAFjC;AAIE,QAAA,IAAI,EAAEJ;AAJR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWH;;AApCsC;;AAuC3C,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nclass ChartsTester extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: []\n        };\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:9000/testAPI')\n          .then(res => res.json())\n          .then(users => this.setState({ users }));\n    }\n\n    render() {\n        let data = []\n        //Need some better way to generate colors programmatically\n        this.state.users.forEach(e => data.push(\n          {\n            name: e.name,\n            value: e.hours,\n            color: \"#\"+Math.floor(Math.random()*16777215).toString(16)\n          })\n        )\n        console.log(data)\n        return (\n          <div>\n            <h1>Users</h1>\n            <PieChart style={{height:\"200px\"}}\n              label={\n                ({ dataEntry }) => dataEntry.name\n              }\n              data={data}\n            />\n          </div>\n        );\n    }\n}\n\nexport default ChartsTester;"]},"metadata":{},"sourceType":"module"}